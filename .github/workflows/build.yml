name: CI/CD Build Example

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
  
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]
    
    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Setup node_env
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}

    - name: Cache node_modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Installing NPM
      run: npm install

    - name: Linting check
      run: npm install -g @angular/cli@latest && npm run lint

    - name: Building application
      run: npm run build

    - name: Generate deployment package
      run: zip -r deploy.zip * .[^.]* -x "**node_modules**"

    - name: Get timestamp
      uses: gerred/actions/current-time@master
      id: current-time

    - name: Run string replace
      uses: frabert/replace-string-action@master
      id: format-time
      with:
        pattern: '[:\.]+'
        string: "${{ steps.current-time.outputs.time }}"
        replace-with: '-'
        flags: 'g'


    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: JS-CICD-App
        environment_name: Js-cicd-app-env
        version_label: "fg-cicd-demo-${{ steps.format-time.outputs.replaced }}"
        region: us-east-1
        deployment_package: deploy.zip
        
    - name: Deployed!
      run: echo App deployed to ELB
        
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
          
  zap_scan:
    name: Scan ZAP website
    runs-on: ubuntu-latest
    
    steps:
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          target: 'https://awsfgcicdtest.us-east-1.elasticbeanstalk.com'
